{"ast":null,"code":"var _jsxFileName = \"/Users/grisha/Sites/weather-for-uncle/src/weather/Card.js\";\nimport React, { Component } from 'react';\n\nclass Card extends Component {\n  constructor(props) {\n    super(props);\n  }\n\n  render() {\n    const monthNames = [\"January\", \"February\", \"March\", \"April\", \"May\", \"June\", \"July\", \"August\", \"September\", \"October\", \"November\", \"December\"];\n    const dayNames = [\"Sunday\", \"Monday\", \"Tuesday\", \"Wednesday\", \"Thursday\", \"Friday\", \"Saturday\"];\n\n    const getCelsius = kelvinTemp => {\n      return Math.floor(kelvinTemp - 273.15) + ' °C';\n    };\n\n    return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"h1\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 15,\n        columnNumber: 17\n      }\n    }, this.props.data.data.city.name + ' ,' + this.props.data.data.city.country), this.props.data.data.list.map(item => {\n      let date = new Date(item.dt * 1000);\n      console.log(date);\n      return /*#__PURE__*/React.createElement(\"div\", {\n        key: item.dt,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 20,\n          columnNumber: 25\n        }\n      }, /*#__PURE__*/React.createElement(\"h1\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 21,\n          columnNumber: 29\n        }\n      }, getCelsius(item.main.temp), \" \"), /*#__PURE__*/React.createElement(\"p\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 22,\n          columnNumber: 29\n        }\n      }, \"Weather \", item.weather[0].description.charAt(0).toUpperCase() + item.weather[0].description.substr(1).toLowerCase()), /*#__PURE__*/React.createElement(\"h2\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 23,\n          columnNumber: 29\n        }\n      }, monthNames[date.getMonth()] + \" \" + dayNames[date.getDay()] + ' ' + date.getFullYear() + \" \" + date.getDate() + \" \" + date.getHours()), /*#__PURE__*/React.createElement(\"img\", {\n        src: `https://openweathermap.org/img/w/${item.weather[0].icon}.png`,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 24,\n          columnNumber: 29\n        }\n      }), /*#__PURE__*/React.createElement(\"p\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 25,\n          columnNumber: 33\n        }\n      }, \"Min Temp:\", getCelsius(item.main.temp_min)), /*#__PURE__*/React.createElement(\"p\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 26,\n          columnNumber: 33\n        }\n      }, \"Max Temp:\", getCelsius(item.main.temp_max)));\n    }));\n  }\n\n}\n\nexport default Card;","map":{"version":3,"sources":["/Users/grisha/Sites/weather-for-uncle/src/weather/Card.js"],"names":["React","Component","Card","constructor","props","render","monthNames","dayNames","getCelsius","kelvinTemp","Math","floor","data","city","name","country","list","map","item","date","Date","dt","console","log","main","temp","weather","description","charAt","toUpperCase","substr","toLowerCase","getMonth","getDay","getFullYear","getDate","getHours","icon","temp_min","temp_max"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;;AAEA,MAAMC,IAAN,SAAmBD,SAAnB,CAA6B;AACzBE,EAAAA,WAAW,CAACC,KAAD,EAAO;AACd,UAAMA,KAAN;AACH;;AACDC,EAAAA,MAAM,GAAG;AACL,UAAMC,UAAU,GAAG,CAAC,SAAD,EAAY,UAAZ,EAAwB,OAAxB,EAAiC,OAAjC,EAA0C,KAA1C,EAAiD,MAAjD,EAAyD,MAAzD,EAAiE,QAAjE,EAA2E,WAA3E,EAAwF,SAAxF,EAAmG,UAAnG,EAA+G,UAA/G,CAAnB;AACA,UAAMC,QAAQ,GAAG,CAAC,QAAD,EAAU,QAAV,EAAmB,SAAnB,EAA6B,WAA7B,EAAyC,UAAzC,EAAoD,QAApD,EAA6D,UAA7D,CAAjB;;AACA,UAAMC,UAAU,GAAIC,UAAD,IAAgB;AAC/B,aAAOC,IAAI,CAACC,KAAL,CAAWF,UAAU,GAAC,MAAtB,IAAgC,KAAvC;AACH,KAFD;;AAGA,wBACI,uDACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAK,KAAKL,KAAL,CAAWQ,IAAX,CAAgBA,IAAhB,CAAqBC,IAArB,CAA0BC,IAA1B,GAAgC,IAAhC,GAAuC,KAAKV,KAAL,CAAWQ,IAAX,CAAgBA,IAAhB,CAAqBC,IAArB,CAA0BE,OAAtE,CADJ,EAEK,KAAKX,KAAL,CAAWQ,IAAX,CAAgBA,IAAhB,CAAqBI,IAArB,CAA0BC,GAA1B,CAA8BC,IAAI,IAAE;AACjC,UAAIC,IAAI,GAAG,IAAIC,IAAJ,CAASF,IAAI,CAACG,EAAL,GAAQ,IAAjB,CAAX;AACAC,MAAAA,OAAO,CAACC,GAAR,CAAYJ,IAAZ;AACA,0BACI;AAAK,QAAA,GAAG,EAAED,IAAI,CAACG,EAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAKb,UAAU,CAACU,IAAI,CAACM,IAAL,CAAUC,IAAX,CAAf,MADJ,eAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBAAYP,IAAI,CAACQ,OAAL,CAAa,CAAb,EAAgBC,WAAhB,CAA4BC,MAA5B,CAAmC,CAAnC,EAAsCC,WAAtC,KAAoDX,IAAI,CAACQ,OAAL,CAAa,CAAb,EAAgBC,WAAhB,CAA4BG,MAA5B,CAAmC,CAAnC,EAAsCC,WAAtC,EAAhE,CAFJ,eAGI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAKzB,UAAU,CAACa,IAAI,CAACa,QAAL,EAAD,CAAV,GAA4B,GAA5B,GAAkCzB,QAAQ,CAACY,IAAI,CAACc,MAAL,EAAD,CAA1C,GAA4D,GAA5D,GAAkEd,IAAI,CAACe,WAAL,EAAlE,GAAqF,GAArF,GAAyFf,IAAI,CAACgB,OAAL,EAAzF,GAA0G,GAA1G,GAAgHhB,IAAI,CAACiB,QAAL,EAArH,CAHJ,eAII;AAAK,QAAA,GAAG,EAAG,oCAAmClB,IAAI,CAACQ,OAAL,CAAa,CAAb,EAAgBW,IAAK,MAAnE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAJJ,eAKQ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBAAa7B,UAAU,CAACU,IAAI,CAACM,IAAL,CAAUc,QAAX,CAAvB,CALR,eAMQ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBAAa9B,UAAU,CAACU,IAAI,CAACM,IAAL,CAAUe,QAAX,CAAvB,CANR,CADJ;AASE,KAZL,CAFL,CADJ;AAkByB;;AA5BJ;;AA+BG,eAAerC,IAAf","sourcesContent":["import React, { Component } from 'react'\n\nclass Card extends Component {\n    constructor(props){\n        super(props)\n    }\n    render() {\n        const monthNames = [\"January\", \"February\", \"March\", \"April\", \"May\", \"June\", \"July\", \"August\", \"September\", \"October\", \"November\", \"December\"];\n        const dayNames = [\"Sunday\",\"Monday\",\"Tuesday\",\"Wednesday\",\"Thursday\",\"Friday\",\"Saturday\"];\n        const getCelsius = (kelvinTemp) => {\n            return Math.floor(kelvinTemp-273.15) + ' °C'\n        }\n        return (\n            <>\n                <h1>{this.props.data.data.city.name +' ,' + this.props.data.data.city.country}</h1>\n                {this.props.data.data.list.map(item=>{\n                    let date = new Date(item.dt*1000)\n                    console.log(date)\n                    return(\n                        <div key={item.dt}>\n                            <h1>{getCelsius(item.main.temp)} </h1>\n                            <p>Weather {item.weather[0].description.charAt(0).toUpperCase()+item.weather[0].description.substr(1).toLowerCase()}</p>\n                            <h2>{monthNames[date.getMonth()]+\" \" + dayNames[date.getDay()] + ' ' + date.getFullYear()+\" \"+date.getDate() + \" \" + date.getHours()}</h2>\n                            <img src={`https://openweathermap.org/img/w/${item.weather[0].icon}.png`}/>\n                                <p>Min Temp:{getCelsius(item.main.temp_min)}</p>\n                                <p>Max Temp:{getCelsius(item.main.temp_max)}</p>\n                                </div>\n                    )})}\n                                </>\n                                )\n                                }\n                                }\n\n                                export default Card"]},"metadata":{},"sourceType":"module"}