{"ast":null,"code":"var _jsxFileName = \"/Users/grisha/Sites/weather-for-uncle/src/weather/Card.js\";\nimport React, { Component } from 'react';\n\nclass Card extends Component {\n  constructor(props) {\n    super(props);\n\n    this.weatherArray = () => {\n      for (let i = 0; i < this.props.data.data.list.length; i++) {\n        if (i === 29) {\n          break;\n        }\n      }\n    };\n  }\n\n  render() {\n    const days = ['Sunday', 'Monday', 'Tuesday', 'Wednesday', 'Thursday', 'Friday', 'Saturday'];\n\n    const getCelsius = kelvinTemp => {\n      return Math.floor(kelvinTemp - 273.15) + ' °C';\n    };\n\n    console.log(this.weatherArray);\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"h1\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 17\n      }\n    }, \" \", this.weatherArray(), \" \")) // пустой тег - реакт фрагмент\n    // <div>\n    //     <h1>{ this.props.data.data.city.name + ', ' + this.props.data.data.city.country }</h1>\n    //     { this.props.data.data.list.map(item => {\n    //             let date = new Date(item.dt * 1000) // нужно умножить на тысячу чтоб\n    //             console.log(date)\n    //             return(\n    //                 <div key={item.dt}>\n    //                     <h1>{ getCelsius(item.main.temp) }</h1>\n    //                     <p>Weather { item.weather[0].description }</p>\n    //                     <h2>{ days[date.getDay()] + ' ' + date.getFullYear() + ' ' + date.getDate() + ' ' + date.getHours() }</h2>\n    //                     <img src={`https://openweathermap.org/img/w/${item.weather[0].icon}.png`} />\n    //                     <p>Min Temp:{ getCelsius(item.main.temp_min) }</p>\n    //                     <p>Max Temp:{ getCelsius(item.main.temp_max) }</p>\n    //                 </div>\n    //         )})}\n    //                     </div>\n    ;\n  }\n\n}\n\nexport default Card;","map":{"version":3,"sources":["/Users/grisha/Sites/weather-for-uncle/src/weather/Card.js"],"names":["React","Component","Card","constructor","props","weatherArray","i","data","list","length","render","days","getCelsius","kelvinTemp","Math","floor","console","log"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;;AAEA,MAAMC,IAAN,SAAmBD,SAAnB,CAA6B;AACzBE,EAAAA,WAAW,CAACC,KAAD,EAAO;AACd,UAAMA,KAAN;;AADc,SAIlBC,YAJkB,GAIH,MAAM;AACjB,WAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAG,KAAKF,KAAL,CAAWG,IAAX,CAAgBA,IAAhB,CAAqBC,IAArB,CAA0BC,MAA9C,EAAsDH,CAAC,EAAvD,EAA2D;AACvD,YAAIA,CAAC,KAAK,EAAV,EAAc;AACV;AACH;AACJ;AACJ,KAViB;AAEjB;;AAUDI,EAAAA,MAAM,GAAG;AACL,UAAMC,IAAI,GAAG,CAAC,QAAD,EAAW,QAAX,EAAqB,SAArB,EAAgC,WAAhC,EAA6C,UAA7C,EAAyD,QAAzD,EAAmE,UAAnE,CAAb;;AACA,UAAMC,UAAU,GAAIC,UAAD,IAAgB;AAC/B,aAAOC,IAAI,CAACC,KAAL,CAAWF,UAAU,GAAG,MAAxB,IAAkC,KAAzC;AACH,KAFD;;AAGAG,IAAAA,OAAO,CAACC,GAAR,CAAY,KAAKZ,YAAjB;AAEA,wBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAAO,KAAKA,YAAL,EAAP,MADJ,CADJ,CAII;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AApBJ;AAqB0B;;AAzCL;;AA4CG,eAAeH,IAAf","sourcesContent":["import React, { Component } from 'react'\n\nclass Card extends Component {\n    constructor(props){\n        super(props)\n    }\n\n    weatherArray = () => {\n        for (let i = 0; i < this.props.data.data.list.length; i++) {\n            if (i === 29) {\n                break\n            }\n        }\n    }\n\n    render() {\n        const days = ['Sunday', 'Monday', 'Tuesday', 'Wednesday', 'Thursday', 'Friday', 'Saturday']\n        const getCelsius = (kelvinTemp) => {\n            return Math.floor(kelvinTemp - 273.15) + ' °C'\n        }\n        console.log(this.weatherArray)\n\n        return (\n            <div>\n                <h1> { this.weatherArray() } </h1>\n            </div>\n            // пустой тег - реакт фрагмент\n            // <div>\n            //     <h1>{ this.props.data.data.city.name + ', ' + this.props.data.data.city.country }</h1>\n            //     { this.props.data.data.list.map(item => {\n            //             let date = new Date(item.dt * 1000) // нужно умножить на тысячу чтоб\n            //             console.log(date)\n            //             return(\n            //                 <div key={item.dt}>\n            //                     <h1>{ getCelsius(item.main.temp) }</h1>\n            //                     <p>Weather { item.weather[0].description }</p>\n            //                     <h2>{ days[date.getDay()] + ' ' + date.getFullYear() + ' ' + date.getDate() + ' ' + date.getHours() }</h2>\n            //                     <img src={`https://openweathermap.org/img/w/${item.weather[0].icon}.png`} />\n            //                     <p>Min Temp:{ getCelsius(item.main.temp_min) }</p>\n            //                     <p>Max Temp:{ getCelsius(item.main.temp_max) }</p>\n            //                 </div>\n            //         )})}\n            //                     </div>\n                                )}\n}\n\n                                export default Card"]},"metadata":{},"sourceType":"module"}